// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  name String
  gender String
  email String @unique
  password String
  phone_number String? @unique
  listings Listing[]
  pings Ping[]
  subscriptions Subscription[]
  notifications Notification[]
  listingNotifySubscriptions ListingNotifySubscription[]
}

model Listing{
  id String @id @default(uuid())
  title String
  description String
  images String
  rent Int
  prefered_gender String?
  address String
  location_city String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String
  user User @relation(fields: [userId] , references: [id])
  pings Ping[]
  listingNotifySubscriptions ListingNotifySubscription[]
}

model Ping{
  id String @id @default(uuid())
  message String?
  createdAt DateTime @default(now())
  postId String 
  userId String
  post Listing @relation(fields: [postId] , references: [id])
  user User @relation(fields: [userId] , references: [id])
}


model Subscription {
  id       String   @id @default(uuid())
  userId   String
  user     User     @relation(fields: [userId], references: [id])
}

model Notification {
  id          String   @id @default(uuid())
  userId      String
  message     String
  read        Boolean  @default(false)
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
}

model ListingNotifySubscription {
  id       String   @id @default(uuid())
  userId   String
  listingId String
  user     User     @relation(fields: [userId], references: [id])
  listing  Listing  @relation(fields: [listingId], references: [id])
}
